name: Build

on:
  push:
    branches:  [main]
  pull_request:
    branches:  [main]
jobs:
  build:
    name : test
    strategy:
      fail-fast: false
      matrix:
       rust : [stable , beta , nightly]
       os : [ ubuntu-latest, macos-latest, windows-latest] 
       include: 
           - os: ubuntu-latest
             rust: nightly
             allow_failure: true
           - os : macOS-latest
             rust: nightly
             allow_failure: true
           - os : windows-latest
             rust: nightly
             allow_failure: true
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup | Checkout
        uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-  
      - run : |
            cargo fmt --all -- --check
            cargo clippy --all --tests -- --deny=warnings
            set RUSTFLAGS="-D warnings"
            cargo build --verbose
            cargo test --verbose
      - name: before deploy
        run: |
            cargo doc
      - name: deploy 1
        if: ${{ matrix.rust == 'nightly' }}
        run : |
            rustup override set nightly
            cargo bench -- --nocapture
      - name: deploy2   
        run: cargo package 
#         run: cargo package --allow-dirty
#   release:
#     name: Release
#     if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
#     needs: build
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout
#         uses: actions/checkout@v2
#       - uses: actions/cache@v2
#         with:
#           path: |
#             ~/.cargo/bin/
#             ~/.cargo/registry/index/
#             ~/.cargo/registry/cache/
#             target/
#           key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
#           restore-keys: ${{ runner.os }}-cargo-
#       - name: Create Release
#         id: create_release
#         uses: actions/create-release@v1
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
#         with:
#           tag_name: v0.2.18
#           release_name: giit_rbpf v0.2.18
#           body: |
#             Changes in this Release
#             - First Change
#             - Second Change
#           draft: false
#           prerelease: false
#       - name: cargo login
#         run: cargo login ${{ secrets.API_KEY }}
#       - run: |
#           cargo publish 
#    #        cargo publish --allow-dirty
